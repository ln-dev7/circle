name: Release Beta Version

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: false
        default: 'beta_increment'
        type: choice
        options:
          - beta_increment
          - beta_minor
          - beta_major
          - beta_patch

permissions:
  contents: write
  pull-requests: write

jobs:
  create_beta_release_pr:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Make release script executable
        run: chmod +x scripts/release.sh

      - name: Determine release type and create beta version
        id: version_bump
        run: |
          CURRENT_VERSION=$(cat VERSION)
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          RELEASE_TYPE="${{ github.event.inputs.release_type }}"

          if [[ "$RELEASE_TYPE" == "beta_increment" ]]; then
            echo "Incrementing beta number"
            ./scripts/release.sh prerelease beta
          elif [[ "$RELEASE_TYPE" == "beta_major" ]]; then
            echo "Creating new major beta version"
            ./scripts/release.sh major
            ./scripts/release.sh prerelease beta
          elif [[ "$RELEASE_TYPE" == "beta_minor" ]]; then
            echo "Creating new minor beta version"
            ./scripts/release.sh minor
            ./scripts/release.sh prerelease beta
          elif [[ "$RELEASE_TYPE" == "beta_patch" ]]; then
            echo "Creating new patch beta version"
            ./scripts/release.sh patch
            ./scripts/release.sh prerelease beta
          fi

          NEW_VERSION=$(cat VERSION)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "release_type=$RELEASE_TYPE" >> $GITHUB_OUTPUT

      - name: Generate Release Notes
        id: generate_notes
        run: |
          # Generate release notes for the new version
          node ./scripts/release-notes.js
          
          # Read the generated release notes
          if [ -f RELEASE_NOTES.md ]; then
            RELEASE_NOTES=$(cat RELEASE_NOTES.md)
            echo "release_notes<<EOF" >> $GITHUB_OUTPUT
            echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "release_notes=No release notes generated" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          commit-message: "chore: bump version to ${{ steps.version_bump.outputs.new_version }} [skip ci]"
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: beta-release-${{ github.run_id }}
          base: develop
          delete-branch: true
          title: '🚀 Beta Release: Version ${{ steps.version_bump.outputs.new_version }}'
          body: |
            ## 📦 Beta Release: ${{ steps.version_bump.outputs.current_version }} → ${{ steps.version_bump.outputs.new_version }}

            **Release Type:** ${{ steps.version_bump.outputs.release_type }} | **Triggered by:** ${{ github.actor }}

            ### 📋 Release Notes
            ${{ steps.generate_notes.outputs.release_notes }}

            ### ✅ Review & Merge
            - Verify version bump is correct
            - Review release notes above
            - Merge to proceed with beta deployment

            ---
            *Auto-generated by [create-pull-request](https://github.com/peter-evans/create-pull-request)*
          draft: false
          add-paths: |
            package.json
            VERSION

      - name: Summary
        run: |
          echo "✅ Beta release PR created successfully"
          echo "📋 PR Title: 🚀 Beta Release: Version ${{ steps.version_bump.outputs.new_version }}"
          echo "🔗 PR URL: ${{ steps.cpr.outputs.pull-request-url }}"
          echo "📝 Please review and merge the PR to complete the beta release"
